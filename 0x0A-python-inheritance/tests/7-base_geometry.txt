Import ''7-base_geometry'' module:

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Tests:

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("asdf", 1)
	>>> bg.integer_validator("asdf", 1.1)
	Traceback (most recent call last):
	...
	TypeError: asdf must be an integer

	>>> bg.integer_validator("asdf", -1)
	Traceback (most recent call last):
	...
	ValueError: asdf must be greater than 0

	>>> bg.integer_validator("asdf", [1])
	Traceback (most recent call last):
	...
	TypeError: asdf must be an integer

	>>> bg.integer_validator("asdf", 0)
	Traceback (most recent call last):
	...
	ValueError: asdf must be greater than 0

	>>> bg.integer_validator("asdf", [1, 2])
	Traceback (most recent call last):
	...
	TypeError: asdf must be an integer

	>>> bg.integer_validator("asdf", None)
	Traceback (most recent call last):
	...
	TypeError: Lyndon must be an integer

	>>> bg.integer_validator("asdf", True)
	Traceback (most recent call last):
	...
	TypeError: asdf must be an integer

	>>> bg.integer_validator()
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> bg.integer_validator("asdf", (1,))
	Traceback (most recent call last):
	...
	TypeError: asdf must be an integer

	>>> bg.integer_validator("asdf")
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> bg.integer_validator("asdf", {1, 2})
	Traceback (most recent call last):
	...
	TypeError: asdf must be an integer

	>>> bg.integer_validator("asdf", "1")
	Traceback (most recent call last):
	...
	TypeError: asdf must be an integer

	>>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented
